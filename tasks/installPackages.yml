---
# Install Apache Packages.
- name: RedHat - Enable EPEL repository
  when: ansible_os_family == "RedHat"
  yum: 
    name: epel-release 
    state: present
  tags:
    - aspects_php
    - aspects_php_package_install

- name: Debian - Install python-apt for use with ansible apt modules.
  when: ansible_os_family == "Debian" or ansible_os_family == "Linuxmint"
  apt: 
    pkg: python-apt 
    state: present 
    update_cache: "yes" 
    cache_valid_time: "86400"
  tags:
    - aspects_php
    - aspects_php_package_install

- name: Debian - install pip
  when: ansible_os_family == "Debian" or ansible_os_family == "Linuxmint"
  apt: 
    pkg: "python-pip" 
    state: "present"
  tags:
    - aspects_php
    - aspects_php_package_install

- name: RedHat - install pip
  when: ansible_os_family == "RedHat"
  yum: 
    name: "python-pip" 
    state: "present"
  tags:
    - aspects_php
    - aspects_php_package_install

- name: Use pip to install ConfigParser
  when:
    ansible_os_family == "Debian" or
    ansible_os_family == "RedHat"
  pip: 
    state: "present" 
    name: "ConfigParser"
  tags:
    - aspects_php
    - aspects_php_package_install

- name: Debian - Install libapache2-mod-php5 package with apt
  when:
    (ansible_os_family == "Debian" or ansible_os_family == "Linuxmint") and
    aspects_php_apache_installed
  apt:
    pkg: "libapache2-mod-php5"
    state: "present"
    update_cache: "yes"
    cache_valid_time: "86400"
  tags:
    - aspects_php
    - aspects_php_package_install

- name: Debian - Install php packages with apt
  when: 
    (ansible_os_family == "Debian" or ansible_os_family == "Linuxmint") and
    item.value.state != "default" and 
    item.value.state != "purged" and 
    item.value.Debian is defined
  apt: 
    pkg: "{{ item.value.Debian }}" 
    state: "{{ item.value.state }}" 
    update_cache: "yes" 
    cache_valid_time: "86400"
  with_dict: aspects_php_packages
  tags:
    - aspects_php
    - aspects_php_package_install

- name: RedHat - Install php packages with yum
  when: 
    ansible_os_family == "RedHat" and 
    item.value.state != "default" and 
    item.value.state != "purged" and 
    item.value.RedHat is defined
  yum: 
    name: "{{ item.value.RedHat }}" 
    state: "{{ item.value.state }}"
  with_dict: aspects_php_packages
  tags:
    - aspects_php
    - aspects_php_package_install
